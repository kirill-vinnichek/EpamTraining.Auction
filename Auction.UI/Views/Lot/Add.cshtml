@model Auction.UI.ViewModels.AddLotViewModel
@{
    ViewBag.Title = "AddLot";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="span12">
            <div class="title-page">
                <h2 class="title">Fill field to register new lot</h2>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="span6 offset3">
            @using (Html.BeginForm("Add", "Lot", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", id = "contact-form", @class = "contact-form", role = "form" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <p>
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                </p>
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                <p>
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                </p>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.InitialCost, htmlAttributes: new { @class = "control-label" })
                <p>
                    @Html.EditorFor(model => model.InitialCost, new { htmlAttributes = new { @class = "form-control", placeholder = "InitialCost" } })
                </p>
                @Html.ValidationMessageFor(model => model.InitialCost, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })
                <p>
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", placeholder = "Duration", min = "3", max = "30" } })
                </p>
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })

                if (Model?.Urls != null)
                {
                    foreach (var u in Model.Urls)
                    {
                        Html.Hidden("Urls", u);
                    }
                }

                <p id="upload">
                    Upload new image:
                    <input type="file" class="submit" name="files[]" multiple="multiple" title='Click to add Images'>
                </p>
                <hr />
                <p id="preview">
                    @if (Model?.Urls != null)
                    {
                        foreach (var u in Model.Urls)
                        {
                            <img src="@Url.Content(u)" width="200" height="200">
                        }
                    }
                </p>
                <hr />
                <p>
                    <input type="submit" value="Exhibit" class="submit" />
                </p>
            }
        </div>
    </div>
</div>


@section scripts {
    @Scripts.Render("~/Scripts/Dmupload")

    <script type="text/javascript">
        $('#upload').dmUploader({
            url: '@Url.Action("Upload","Lot")',
            dataType: 'json',
            allowedTypes: 'image/*',
            maxFiles: 3,
            fileName: 'img',
            onNewFile: function (id, file) {
                if (id == 2)
                    $('#upload').css({ display: "none" });
            },
            onUploadSuccess: function (id, data) {
                if (data.success) {
                    //alert('Server Response for file #' + id + ': ' + data.path);
                    $('#contact-form').append(
              $('<input/>')
                .attr('type', 'hidden')
                .attr('name', 'Urls')
                .attr('id', 'Urls')
                .val(data.img));
                    $('#preview').append('<img src="' + data.preview_path + '" width="200" height="200" > ');
                }


            }
        });

    </script>


}

